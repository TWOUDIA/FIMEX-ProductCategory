angular.module("chineselearn",["ionic","ngCookies","ngMessages","pascalprecht.translate","tmh.dynamicLocale","ionic-toast","chineselearn.controllers","chineselearn.directives","chineselearn.filters","chineselearn.services"]).run(function(e,t,a,n,r){e.ready(function(){window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&StatusBar.styleLightContent()});var o=!1;e.registerBackButtonAction(function(e){e.preventDefault();var s=t.backView();return s?s.go():o?ionic.Platform.exitApp():(o=!0,a.show(n("translate")("CONFIRM_BEFORE_APP_EXIT"),"middle",!1,1e3),r(function(){o=!1},2e3)),!1},101)}).config(function(e,t,a,n,r){e.tabs.position("bottom"),t.localeLocationPattern("locales/angular-locale_{{locale}}.js"),a.useStaticFilesLoader({prefix:"i18n/",suffix:".json"}).registerAvailableLanguageKeys(["ar","bn","de","en","es","fr","hi","id","ja","ms","pt","ru","ur","zh"],{ar:"ar","ar_*":"ar",bn:"bn","bn_*":"bn",de:"de","de_*":"de",en:"en","en_*":"en",es:"es","es_*":"es",fr:"fr","fr_*":"fr",hi:"hi","hi_*":"hi",id:"id","id_*":"id",ja:"ja","ja_*":"ja",ms:"ms","ms_*":"ms",pt:"pt","pt_*":"pt",ru:"ru","ru_*":"ru",ur:"ur","ur_*":"ur",zh:"zh","zh_*":"zh"}).preferredLanguage("de").fallbackLanguage(["en","zh","es","fr"]).determinePreferredLanguage().useSanitizeValueStrategy("escapeParameters").useLocalStorage(),n.state("tab",{url:"/tab","abstract":!0,templateUrl:"templates/tabs.html"}).state("tab.dash",{url:"/dash",views:{"tab-dash":{templateUrl:"templates/tab-dash.html",controller:"DashCtrl"}}}).state("tab.posts",{url:"/posts",cache:!1,views:{"tab-posts":{templateUrl:"templates/tab-posts.html",controller:"PostsCtrl"}}}).state("tab.post-detail",{url:"/posts/:postId",views:{"tab-posts":{templateUrl:"templates/post-detail.html",controller:"PostDetailCtrl"}}}).state("tab.tags",{url:"/tags",cache:!1,views:{"tab-tags":{templateUrl:"templates/tab-tags.html",controller:"TagsCtrl"}}}).state("tab.tag-posts",{url:"/tagposts/:tagSlug/:tagName",views:{"tab-posts":{templateUrl:"templates/tab-posts.html",controller:"PostsCtrl"}}}).state("tab.categories",{url:"/categories",cache:!1,views:{"tab-categories":{templateUrl:"templates/tab-categories.html",controller:"CategoriesCtrl"}}}).state("tab.category-posts",{url:"/categoryposts/:categorySlug/:categoryName",views:{"tab-posts":{templateUrl:"templates/tab-posts.html",controller:"PostsCtrl"}}}).state("tab.account",{url:"/account",views:{"tab-account":{templateUrl:"templates/tab-account.html",controller:"AccountCtrl"}}}),r.otherwise("/tab/dash")}),angular.module("chineselearn.controllers",[]).controller("DashCtrl",function(e){}).controller("PostsCtrl",function(e,t,a,n,r,o,s,l){s.show({template:o("translate")("LOADING_TEXT")}),e.RSempty=!1;var i;a.tagSlug?(i="?filter[tag]="+a.tagSlug,e.termQS={Type:"TAB_TITLE_TAGS",Term:a.tagName}):a.categorySlug?(i="?filter[category_name]="+a.categorySlug,e.termQS={Type:"TAB_TITLE_CATEGORIES",Term:a.categoryName}):i="",e.loadPosts=function(){t.get("posts"+i).then(function(t){e.posts=t.data,s.hide()},function(t){r.error("error",t),s.hide(),e.RSempty=!0})},e.loadPosts(),e.doRefresh=function(){n(function(){s.show({template:o("translate")("LOADING_TEXT")}),e.loadPosts()},1e3)}}).controller("PostDetailCtrl",function(e,t,a,n,r,o,s,l){l.show({template:s("translate")("LOADING_TEXT")}),e.RSempty=!1,e.loadPost=function(){a.get("posts/"+t.postId).then(function(t){e.post=t.data,e.content=n.trustAsHtml(t.data.content.rendered),l.hide()},function(e){o.error("error",e),l.hide()})},e.loadPost(),e.doRefresh=function(){r(function(){e.loadPost()},1e3)}}).controller("TagsCtrl",function(e,t,a,n,r,o){o.show({template:r("translate")("LOADING_TEXT")}),e.RSempty=!1,e.loadTags=function(){t.get("tags").then(function(t){e.tags=t.data,o.hide()},function(t){n.error("error",t),o.hide(),e.RSempty=!0})},e.loadTags(),e.doRefresh=function(){a(function(){e.loadTags()},1e3)}}).controller("CategoriesCtrl",function(e,t,a,n,r,o){o.show({template:r("translate")("LOADING_TEXT")}),e.RSempty=!1,e.loadCategories=function(){t.get("categories").then(function(t){e.categories=t.data,o.hide()},function(t){n.error("error",t),o.hide(),e.RSempty=!0})},e.loadCategories(),e.doRefresh=function(){a(function(){e.loadCategories()},1e3)}}).controller("AccountCtrl",function(e,t,a,n,r,o,s,l){e.forms={},e.ctForm={},e.settings={enableFriends:!0,language:t.use()},e.$watch("settings.language",function(){n.change("language",e.settings.language),r.clearCache(),r.clearHistory()}),e.formSubmit=function(){var t={key:n.get("emailserviceKey"),message:{html:e.ctForm.ctMessage,text:e.ctForm.ctMessage,subject:"Message sent via Mobile APP - ChineseLearn.info, "+s("date")(Date.now(),"yyyy-MM-dd HH:mm:ss Z"),from_email:e.ctForm.ctEmail,from_name:e.ctForm.ctName,to:[{email:n.get("contactForm2Email"),name:n.get("contactForm2User"),type:"to"}],important:!1,track_opens:null,track_clicks:null,auto_text:null,auto_html:null,inline_css:null,url_strip_qs:null,preserve_recipients:null,view_content_link:null,tracking_domain:null,signing_domain:null,return_path_domain:null},async:!1,ip_pool:"Main Pool"};o.send(t),alert(s("translate")("ALERT_MAIL_SENT",{name:e.ctForm.ctName})),e.ctForm={},e.forms.contactForm.$setPristine()}}),angular.module("chineselearn.directives",[]).directive("gpRadio",function(){return{restrict:"A",require:"ngModel",scope:{model:"=ngModel",value:"=gpRadio"},link:function(e,t,a,n){t.addClass("button"),t.on("click",function(t){e.$apply(function(){n.$setViewValue(e.value)})}),e.$watch("model",function(a){t.removeClass("button-positive"),a===e.value&&t.addClass("button-positive")})}}}),angular.module("chineselearn.filters",[]).filter("linkremove",function(e,t){return function(t){var a=document.createElement("div");a.innerHTML=t;for(var n=a.getElementsByTagName("a"),r=n.length;r>0;r--)n[r-1].parentNode.removeChild(n[r-1]);return e.trustAsHtml(a.outerHTML)}}).filter("linkremove_imagelazyload",function(e,t){return function(t){var a=document.createElement("div");a.innerHTML=t;for(var n=a.getElementsByTagName("a"),r=n.length;r>0;r--)n[r-1].parentNode.removeChild(n[r-1]);for(var o=a.getElementsByTagName("img"),r=0;r<o.length-1;r++)o[r].setAttribute("image-lazy-src",o[r].getAttribute("src")),o[r].setAttribute("lazy-scroll-resize",!0),o[r].removeAttribute("src");return e.trustAsHtml(a.outerHTML)}}).filter("unicode",function(e){return function(t){return e.trustAsHtml(t)}}),angular.module("chineselearn.services",[]).factory("DataLoader",function(e,t,a){return{get:function(n){var r=a.getURI()+n;return t.debug("URL: "+r),e.get(r)}}}).factory("EmailSender",function(e,t,a){return{send:function(n){return e.post(a.get("emailAPI"),n).success(function(){t.debug("successful email send.")}).error(function(){t.debug("error sending email.")}),null}}}).factory("AppSettings",function(e,t,a){function n(e){switch(e){case"en":r.languageURI="";break;case"zh":r.languageURI="zh-hant/";break;default:r.languageURI=e+"/"}}var r={domainURI:"https://chineselearn.info/",wpjsonURI:"wp-json/wp/v2/",enableFriends:!0,language:"",languageURI:"",emailserviceKey:"e8yCnUcg1OaKz0dWIhIH7w",emailAPI:"https://mandrillapp.com/api/1.0/messages/send.json",contactForm2Email:"support@chineselearn.info",contactForm2User:"Support",datdReload:!1};return r.language=e.use(),n(r.language),{change:function(o,s){r[o]=s,"language"==o&&(n(s),e.use(s),t.set(s)),a.debug(o+" : "+s)},get:function(e){return r[e]},getURI:function(){return r.domainURI+r.languageURI+r.wpjsonURI}}});
//# sourceMappingURL=data:application/json;base64,
